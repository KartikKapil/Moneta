{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FoodFlex/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { IonContent, IonPage, IonRow, IonCol, IonButton, IonList, IonItem, IonLabel, IonInput, IonText, IonTitle, IonRouterLink, IonIcon } from \"@ionic/react\";\nimport \"./Login.css\";\nimport { arrowForwardOutline } from \"ionicons/icons\"; // import { RouteComponentProps, Redirect } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setIsLoggedin,\n  setIsVendor,\n  setHomeName\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const login = async e => {\n    e.preventDefault();\n    setFormSubmitted(true);\n\n    if (!username) {\n      setUsernameError(true);\n    }\n\n    if (!password) {\n      setPasswordError(true);\n    }\n\n    if (username && password) {\n      // setIsLoggedin(true);\n      const data = {\n        username,\n        password\n      };\n      fetch(process.env.REACT_APP_BACKEND_API_URL + \"/token-auth/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(json => {\n        console.log(json);\n        localStorage.setItem(\"token\", json.token);\n        localStorage.setItem(\"vendor\", json.isVendor ? \"1\" : \"0\");\n        localStorage.setItem(\"name\", json.name);\n        setIsVendor(json.isVendor);\n        setHomeName(json.name);\n        setIsLoggedin(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    id: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      id: \"login-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.postimg.cc/bJwxHcM3/log2.png\",\n          alt: \"Ionic logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonTitle, {\n        className: \"welcome ion-text-center\",\n        children: \"WELCOME ! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: login,\n        children: [/*#__PURE__*/_jsxDEV(IonList, {\n          children: [/*#__PURE__*/_jsxDEV(IonItem, {\n            children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n              position: \"floating\",\n              className: \"loginLabel\",\n              color: \"danger\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n              name: \"username\",\n              type: \"text\",\n              value: username,\n              spellCheck: false,\n              autocapitalize: \"off\",\n              onIonChange: e => setUsername(e.detail.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), formSubmitted && usernameError && /*#__PURE__*/_jsxDEV(IonText, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ion-padding-start errorLogin\",\n              children: \"*Username is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n            children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n              className: \"loginLabel\",\n              position: \"floating\",\n              color: \"danger\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n              name: \"password\",\n              type: \"password\",\n              value: password,\n              onIonChange: e => setPassword(e.detail.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), formSubmitted && passwordError && /*#__PURE__*/_jsxDEV(IonText, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ion-padding-start errorLogin\",\n              children: \"*Password is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n          children: [/*#__PURE__*/_jsxDEV(IonCol, {\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              type: \"submit\",\n              color: \"success\",\n              expand: \"block\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              routerLink: \"/signup\",\n              color: \"light\",\n              expand: \"block\",\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonRouterLink, {\n          href: \"/vendorSignup\",\n          routerDirection: \"forward\",\n          children: /*#__PURE__*/_jsxDEV(IonText, {\n            className: \"vendor-txt\",\n            children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n              icon: arrowForwardOutline,\n              className: \"arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), \" A Vendor? Join us :)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"GqFl9lQtyWj/OyghnoESLc5LC60=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/kartik/Desktop/FoodFlex/src/pages/Login.tsx"],"names":["React","useState","IonContent","IonPage","IonRow","IonCol","IonButton","IonList","IonItem","IonLabel","IonInput","IonText","IonTitle","IonRouterLink","IonIcon","arrowForwardOutline","Login","setIsLoggedin","setIsVendor","setHomeName","username","setUsername","password","setPassword","formSubmitted","setFormSubmitted","usernameError","setUsernameError","passwordError","setPasswordError","login","e","preventDefault","data","fetch","process","env","REACT_APP_BACKEND_API_URL","method","headers","body","JSON","stringify","then","res","json","console","log","localStorage","setItem","token","isVendor","name","detail","value"],"mappings":"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","sourcesContent":["import React, { useState, Dispatch } from \"react\";\nimport {\n  IonContent,\n  IonPage,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonText,\n  IonTitle,\n  IonRouterLink,\n  IonIcon,\n} from \"@ionic/react\";\nimport \"./Login.css\";\nimport { arrowForwardOutline, chevronForwardOutline } from \"ionicons/icons\";\n\n// import { RouteComponentProps, Redirect } from 'react-router';\n\ntype Props = {\n  setIsLoggedin: Dispatch<React.SetStateAction<boolean>>;\n  setIsVendor: Dispatch<React.SetStateAction<boolean>>;\n  setHomeName: Dispatch<React.SetStateAction<string>>;\n};\n\nconst Login: React.FC<Props> = ({ setIsLoggedin, setIsVendor, setHomeName }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const login = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setFormSubmitted(true);\n\n    if (!username) {\n      setUsernameError(true);\n    }\n    if (!password) {\n      setPasswordError(true);\n    }\n\n    if (username && password) {\n      // setIsLoggedin(true);\n      const data: any = {\n        username,\n        password,\n      };\n      fetch(process.env.REACT_APP_BACKEND_API_URL + \"/token-auth/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          console.log(json);\n          localStorage.setItem(\"token\", json.token);\n\t  localStorage.setItem(\"vendor\", json.isVendor ? \"1\" : \"0\");\n          localStorage.setItem(\"name\", json.name);\n\t  setIsVendor(json.isVendor);\n          setHomeName(json.name);\n          setIsLoggedin(true);\n        });\n    }\n  };\n\n  return (\n    <IonPage id=\"login-page\">\n      {/* <IonHeader>\n        <IonToolbar>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader> */}\n      <IonContent id=\"login-page\">\n        <div className=\"login-logo\">\n          <img src=\"https://i.postimg.cc/bJwxHcM3/log2.png\" alt=\"Ionic logo\" />\n        </div>\n        <IonTitle className=\"welcome ion-text-center\">WELCOME ! </IonTitle>\n        <form noValidate onSubmit={login}>\n          <IonList>\n            <IonItem>\n              <IonLabel position=\"floating\" className=\"loginLabel\" color=\"danger\">\n                Username\n              </IonLabel>\n              <IonInput\n                name=\"username\"\n                type=\"text\"\n                value={username}\n                spellCheck={false}\n                autocapitalize=\"off\"\n                onIonChange={(e) => setUsername(e.detail.value!)}\n                required\n              ></IonInput>\n            </IonItem>\n\n            {formSubmitted && usernameError && (\n              <IonText>\n                <p className=\"ion-padding-start errorLogin\">*Username is required</p>\n              </IonText>\n            )}\n\n            <IonItem>\n              <IonLabel className=\"loginLabel\" position=\"floating\" color=\"danger\">\n                Password\n              </IonLabel>\n              <IonInput\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                onIonChange={(e) => setPassword(e.detail.value!)}\n              ></IonInput>\n            </IonItem>\n\n            {formSubmitted && passwordError && (\n              <IonText>\n                <p className=\"ion-padding-start errorLogin\">*Password is required</p>\n              </IonText>\n            )}\n          </IonList>\n\n          <IonRow>\n            <IonCol>\n              <IonButton type=\"submit\" color=\"success\" expand=\"block\">\n                Login\n              </IonButton>\n            </IonCol>\n            <IonCol>\n              <IonButton routerLink=\"/signup\" color=\"light\" expand=\"block\">\n                Signup\n              </IonButton>\n            </IonCol>\n          </IonRow>\n          <IonRouterLink href=\"/vendorSignup\" routerDirection=\"forward\">\n            <IonText className=\"vendor-txt\">\n              <IonIcon icon={arrowForwardOutline} className=\"arrow\"></IonIcon> A Vendor? Join us :)\n            </IonText>\n          </IonRouterLink>\n        </form>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}