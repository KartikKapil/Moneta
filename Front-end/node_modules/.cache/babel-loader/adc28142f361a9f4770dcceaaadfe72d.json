{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FoodFlex/src/components/Preferences.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { IonIcon, IonGrid, IonCard, IonRow, IonCol, IonButton, IonItem, IonLabel, IonInput } from \"@ionic/react\";\nimport fuzzysort from \"fuzzysort\";\nimport ChipsComp from \"../components/ChipsComp\";\nimport { fastFoodOutline, peopleOutline, checkmarkDoneOutline, closeCircleOutline, clipboardOutline } from \"ionicons/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Preferences = props => {\n  _s();\n\n  const [preferredRestaurants, setPreferredRestaurants] = useState(\"\");\n  const [restSuggestions, setRestSuggestions] = useState();\n  const [selectedRests, setSelectedRests] = useState([]);\n  const [preferredCuisines, setPreferredCuisines] = useState(\"\");\n  const [dislikedDishes, setDislikedDishes] = useState(\"\");\n  const [preferredVendors, setPreferredVendors] = useState(\"\");\n  const [vendorList, setVendorList] = useState([{\n    id: \"abc\",\n    name: \"ABC\"\n  }, {\n    id: \"xyz\",\n    name: \"XYZ\"\n  }]);\n  const [vendorSuggestions, setVendorSuggestions] = useState();\n  const [selectedVendors, setSelectedVendors] = useState([]); // const [formSubmitted, setFormSubmitted] = useState(false);\n  // const [usernameError, setUsernameError] = useState(false);\n  // const [passwordError, setPasswordError] = useState(false);\n\n  const restInput = useRef(null);\n\n  const clearInputs = () => {// console.log(props.inInput.current!.value!);\n    // props.inInput.current!.value = \"\";\n  }; // Get the nearby vendors list\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const coords = {\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude\n      };\n      let myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      fetch(process.env.REACT_APP_BACKEND_API_URL + `/closest_vendors/`, {\n        method: \"POST\",\n        body: JSON.stringify(coords),\n        headers: myHeaders\n      }).then(res => {\n        res.json().then(data => {\n          console.log(\"Vendors: \");\n          console.log(data.vendors);\n          setVendorList(data.vendors);\n        });\n      });\n    });\n  }, []); // Select a Vendor\n\n  const selectVendor = e => {\n    const id = e.target.id;\n    const name = e.target.innerText;\n    const newArray = [...selectedVendors, {\n      id: id,\n      name: name\n    }];\n    setSelectedVendors(newArray);\n    setRestSuggestions( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this));\n    setPreferredVendors(\"\");\n    setVendorSuggestions( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  }; // Select a Restaurant\n\n\n  const selectRest = e => {\n    const id = e.target.id;\n    const name = e.target.innerText;\n    const newArray = [...selectedRests, {\n      id: id,\n      name: name\n    }];\n    setSelectedRests(newArray);\n    setVendorSuggestions( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 26\n    }, this));\n    setPreferredRestaurants(\"\");\n    setRestSuggestions( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  }; // Change the autocomplete dropdown based on suggestions\n\n\n  const onVendorInpChange = e => {\n    if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].some(key => key === e.key)) {\n      // TODO: Move up and down in suggestions (Low Priority)\n      console.log(\"TBD\");\n    } else {\n      // Show suggestions\n      // console.log(\"Input value: \", restInput.current!.value);\n      const suggestions = vendorList.length !== 0 ? fuzzysort.go(e.target.value, vendorList, {\n        key: \"name\"\n      }) : []; // The suggestions List\n\n      const list = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"autocomplete-list\",\n        className: \"autocomplete-items\",\n        children: suggestions.map(({\n          obj\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: obj.id,\n            onClick: selectVendor,\n            children: [\" \", obj.name, \" \"]\n          }, obj.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n\n      console.log(suggestions);\n      setVendorSuggestions(list);\n      setPreferredVendors(e.target.value);\n    }\n  }; // Change the autocomplete dropdown based on suggestions\n\n\n  const onRestInputChange = e => {\n    if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].some(key => key === e.key)) {\n      // TODO: Move up and down in suggestions (Low Priority)\n      console.log(\"TBD\");\n    } else {\n      // Show suggestions\n      // console.log(\"Input value: \", restInput.current!.value);\n      fetch(process.env.REACT_APP_ZOMATO_API_URL + `/search?count=5&q=${e.target.value}&lat=28.6362295&lon=77.3763150`, {\n        headers: {\n          Accept: \"application/json\",\n          \"User-Key\": \"28c7fdb103232548b1503df6df9b4520\"\n        }\n      }).then(resp => {\n        resp.json().then(data => {\n          const rests = data.restaurants; // The suggestions List\n\n          const list = /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"autocomplete-list\",\n            className: \"autocomplete-items\",\n            children: rests.map(rest => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                id: rest.restaurant.id,\n                onClick: selectRest,\n                children: [\" \", rest.restaurant.name, \" \"]\n              }, rest.restaurant.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this);\n\n          setRestSuggestions(list);\n          setPreferredRestaurants(e.target.value);\n        });\n      });\n    }\n  };\n\n  const signup = e => {\n    e.preventDefault(); // extract form data\n\n    const target = e.target;\n    console.log(target);\n    const formdata = new FormData(e.target);\n    formdata.append(\"username\", props.username);\n    const json = {};\n    formdata.forEach(function (value, prop) {\n      json[prop] = value;\n    });\n    const restIds = selectedRests.map(rest => rest.id);\n    const vendorNames = selectedVendors.map(vendor => vendor.id);\n    const dob = new Date(props.selectedDate);\n    json[\"preferred_restaurants\"] = restIds.join(\",\");\n    json[\"preferred_vendors\"] = vendorNames.length != 0 ? vendorNames.join(\",\") : \",\";\n    json[\"username\"] = props.username;\n    json[\"password\"] = props.password;\n    json[\"name\"] = props.name;\n    json[\"last_name\"] = props.lname;\n    json[\"address\"] = props.address;\n    json[\"phone\"] = props.phone;\n    json[\"budget_total\"] = props.budget;\n    json[\"PAN_number\"] = props.panNum;\n    json[\"DOB_date\"] = dob.getDate();\n    json[\"DOB_month\"] = dob.getMonth() + 2;\n    json[\"DOB_year\"] = dob.getFullYear();\n    console.log(props);\n    console.log(dob.getMonth());\n    console.log(dob.getFullYear());\n    console.log(json);\n    navigator.geolocation.getCurrentPosition(position => {\n      json[\"latitude\"] = position.coords.latitude;\n      json[\"longitude\"] = position.coords.longitude;\n      fetch(process.env.REACT_APP_BACKEND_API_URL + \"/new_signup/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(json)\n      }).then(userResponse => {\n        if (userResponse.status == 201) {\n          console.log(\"User success\"); // Upload the menu\n\n          fetch(process.env.REACT_APP_BACKEND_API_URL + \"/file_upload/\", {\n            method: \"POST\",\n            body: formdata\n          }).then(fileResponse => {\n            // If upload is successful, log in\n            if (fileResponse.status == 204) {\n              userResponse.json().then(data => {\n                localStorage.setItem(\"token\", data.user.token);\n                localStorage.setItem(\"vendor\", \"0\");\n                localStorage.setItem(\"name\", data.student.name);\n                props.setHomeName(data.student.name);\n                props.setIsLoggedin(true);\n                props.setIsVendor(false);\n                console.log(data);\n              });\n            }\n          });\n        } else {\n          console.log(\"error\");\n          userResponse.json().then(data => {\n            // TODO: Display the errors on screen\n            console.log(data);\n          });\n        }\n      }).catch(error => {\n        console.log(\"error\");\n        console.log(error);\n      });\n    });\n  };\n\n  const removeRestChip = restId => {\n    const newSelectedRest = selectedRests.filter(rest => {\n      return rest.id !== restId;\n    });\n    setSelectedRests(newSelectedRest);\n  };\n\n  const removeVendChip = vendId => {\n    const newSelectedVendors = selectedVendors.filter(vend => {\n      return vend.id !== vendId;\n    });\n    setSelectedRests(newSelectedVendors);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    onSubmit: signup,\n    children: /*#__PURE__*/_jsxDEV(IonGrid, {\n      className: \"pref\",\n      children: [/*#__PURE__*/_jsxDEV(IonRow, {\n        children: /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"header pref\",\n            children: \"Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        className: \"cardRow\",\n        children: /*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonItem, {\n            children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n              icon: fastFoodOutline,\n              color: \"primary\",\n              className: \"ion-padding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n              className: \"labels\",\n              children: \"Preferred Restaurants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n              color: \"primary\",\n              name: \"preferred_restaurants\",\n              type: \"text\",\n              value: preferredRestaurants,\n              onKeyDown: onRestInputChange,\n              ref: restInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: restSuggestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), selectedRests.map(rest => /*#__PURE__*/_jsxDEV(IonItem, {\n            lines: \"none\",\n            className: \"chipsDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: rest.id,\n              children: /*#__PURE__*/_jsxDEV(ChipsComp, {\n                restName: rest.name,\n                restId: rest.id,\n                removeChip: removeRestChip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        className: \"cardRow\",\n        children: /*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonItem, {\n            children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n              icon: peopleOutline,\n              color: \"primary\",\n              className: \"ion-padding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n              children: \"Preferred Vendors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n              color: \"primary\",\n              name: \"preferred_vendors\",\n              type: \"text\",\n              value: preferredVendors,\n              onKeyDown: onVendorInpChange // ref={restInput}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: vendorSuggestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), selectedVendors.map(vend => /*#__PURE__*/_jsxDEV(IonItem, {\n            lines: \"none\",\n            className: \"chipsDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: vend.id,\n              children: /*#__PURE__*/_jsxDEV(ChipsComp, {\n                restName: vend.name,\n                restId: vend.id,\n                removeChip: removeVendChip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        children: /*#__PURE__*/_jsxDEV(IonCard, {\n          children: /*#__PURE__*/_jsxDEV(IonItem, {\n            children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n              icon: checkmarkDoneOutline,\n              className: \"ion-padding\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n              children: \"Preferred Cuisines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n              color: \"primary\",\n              name: \"preferred_cuisines\",\n              type: \"text\",\n              value: preferredCuisines,\n              onIonChange: e => setPreferredCuisines(e.detail.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        children: /*#__PURE__*/_jsxDEV(IonCard, {\n          children: /*#__PURE__*/_jsxDEV(IonItem, {\n            children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n              icon: closeCircleOutline,\n              className: \"ion-padding\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n              children: \"Disliked Dishes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n              color: \"primary\",\n              name: \"not_preferred\",\n              type: \"text\",\n              value: dislikedDishes,\n              onIonChange: e => setDislikedDishes(e.detail.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        children: /*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonItem, {\n            children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n              icon: clipboardOutline,\n              className: \"ion-padding\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n              children: \"Mess Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ion-padding\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        children: /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(IonButton, {\n            type: \"submit\",\n            color: \"primary\",\n            expand: \"block\",\n            className: \"btn-sub\",\n            onClick: clearInputs,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Preferences, \"6toF3xk273/j8JeWBrtpiuRbto8=\");\n\n_c = Preferences;\nexport default Preferences;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"sources":["/home/kartik/Desktop/FoodFlex/src/components/Preferences.tsx"],"names":["React","useState","useEffect","useRef","IonIcon","IonGrid","IonCard","IonRow","IonCol","IonButton","IonItem","IonLabel","IonInput","fuzzysort","ChipsComp","fastFoodOutline","peopleOutline","checkmarkDoneOutline","closeCircleOutline","clipboardOutline","Preferences","props","preferredRestaurants","setPreferredRestaurants","restSuggestions","setRestSuggestions","selectedRests","setSelectedRests","preferredCuisines","setPreferredCuisines","dislikedDishes","setDislikedDishes","preferredVendors","setPreferredVendors","vendorList","setVendorList","id","name","vendorSuggestions","setVendorSuggestions","selectedVendors","setSelectedVendors","restInput","clearInputs","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","myHeaders","Headers","append","fetch","process","env","REACT_APP_BACKEND_API_URL","method","body","JSON","stringify","headers","then","res","json","data","console","log","vendors","selectVendor","e","target","innerText","newArray","selectRest","onVendorInpChange","some","key","suggestions","length","go","value","list","map","obj","onRestInputChange","REACT_APP_ZOMATO_API_URL","Accept","resp","rests","restaurants","rest","restaurant","signup","preventDefault","formdata","FormData","username","forEach","prop","restIds","vendorNames","vendor","dob","Date","selectedDate","join","password","lname","address","phone","budget","panNum","getDate","getMonth","getFullYear","userResponse","status","fileResponse","localStorage","setItem","user","token","student","setHomeName","setIsLoggedin","setIsVendor","catch","error","removeRestChip","restId","newSelectedRest","filter","removeVendChip","vendId","newSelectedVendors","vend","detail"],"mappings":"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","sourcesContent":["import React, { useState, ReactElement, useEffect, useRef, RefObject, Dispatch } from \"react\";\nimport { IonIcon, IonGrid, IonCard, IonRow, IonCol, IonButton, IonItem, IonLabel, IonInput } from \"@ionic/react\";\nimport fuzzysort from \"fuzzysort\";\nimport ChipsComp from \"../components/ChipsComp\";\nimport {\n  fastFoodOutline,\n  peopleOutline,\n  checkmarkDoneOutline,\n  closeCircleOutline,\n  clipboardOutline,\n} from \"ionicons/icons\";\n\ntype Prefprops = {\n  setIsLoggedin: Dispatch<React.SetStateAction<boolean>>;\n  setHomeName: Dispatch<React.SetStateAction<string>>;\n  setIsVendor: Dispatch<React.SetStateAction<boolean>>;\n  username: string;\n  password: string;\n  name: string;\n  lname: string;\n  address: string;\n  phone: any;\n  budget: any;\n  panNum: any;\n  selectedDate: string;\n  inInput: RefObject<HTMLIonInputElement>;\n};\n\nconst Preferences: React.FC<Prefprops> = (props) => {\n  const [preferredRestaurants, setPreferredRestaurants] = useState(\"\");\n  const [restSuggestions, setRestSuggestions] = useState<ReactElement<any, any>>();\n  const [selectedRests, setSelectedRests] = useState<{ id: any; name: any }[]>([]);\n  const [preferredCuisines, setPreferredCuisines] = useState(\"\");\n  const [dislikedDishes, setDislikedDishes] = useState(\"\");\n\n  const [preferredVendors, setPreferredVendors] = useState(\"\");\n  const [vendorList, setVendorList] = useState<{ id: any; name: any }[]>([\n    { id: \"abc\", name: \"ABC\" },\n    { id: \"xyz\", name: \"XYZ\" },\n  ]);\n  const [vendorSuggestions, setVendorSuggestions] = useState<ReactElement<any, any>>();\n  const [selectedVendors, setSelectedVendors] = useState<{ id: any; name: any }[]>([]);\n  // const [formSubmitted, setFormSubmitted] = useState(false);\n  // const [usernameError, setUsernameError] = useState(false);\n  // const [passwordError, setPasswordError] = useState(false);\n\n  const restInput = useRef<HTMLIonInputElement>(null);\n  const clearInputs = () => {\n    // console.log(props.inInput.current!.value!);\n    // props.inInput.current!.value = \"\";\n  };\n\n  // Get the nearby vendors list\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const coords = {\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude,\n      };\n      let myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n\n      fetch(process.env.REACT_APP_BACKEND_API_URL + `/closest_vendors/`, {\n        method: \"POST\",\n        body: JSON.stringify(coords),\n\theaders: myHeaders\n      }).then((res) => {\n        res.json().then((data) => {\n          console.log(\"Vendors: \");\n          console.log(data.vendors);\n          setVendorList(data.vendors);\n        });\n      });\n    });\n  }, []);\n\n  // Select a Vendor\n  const selectVendor = (e: any) => {\n    const id = e.target.id;\n    const name = e.target.innerText;\n    const newArray = [...selectedVendors, { id: id, name: name }];\n    setSelectedVendors(newArray);\n    setRestSuggestions(<div></div>);\n    setPreferredVendors(\"\");\n    setVendorSuggestions(<></>);\n  };\n\n  // Select a Restaurant\n  const selectRest = (e: any) => {\n    const id = e.target.id;\n    const name = e.target.innerText;\n    const newArray = [...selectedRests, { id: id, name: name }];\n    setSelectedRests(newArray);\n    setVendorSuggestions(<div></div>);\n    setPreferredRestaurants(\"\");\n    setRestSuggestions(<></>);\n  };\n\n  // Change the autocomplete dropdown based on suggestions\n  const onVendorInpChange = (e: any) => {\n    if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].some((key) => key === e.key)) {\n      // TODO: Move up and down in suggestions (Low Priority)\n      console.log(\"TBD\");\n    } else {\n      // Show suggestions\n      // console.log(\"Input value: \", restInput.current!.value);\n      const suggestions = vendorList.length !== 0 ? fuzzysort.go(e.target.value, vendorList, { key: \"name\" }) : [];\n      // The suggestions List\n      const list = (\n        <div id=\"autocomplete-list\" className=\"autocomplete-items\">\n          {suggestions.map(({ obj }: any) => {\n            return (\n              <div id={obj.id} key={obj.id} onClick={selectVendor}>\n                {\" \"}\n                {obj.name}{\" \"}\n              </div>\n            );\n          })}\n        </div>\n      );\n      console.log(suggestions);\n      setVendorSuggestions(list);\n      setPreferredVendors(e.target.value);\n    }\n  };\n\n  // Change the autocomplete dropdown based on suggestions\n  const onRestInputChange = (e: any) => {\n    if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].some((key) => key === e.key)) {\n      // TODO: Move up and down in suggestions (Low Priority)\n      console.log(\"TBD\");\n    } else {\n      // Show suggestions\n      // console.log(\"Input value: \", restInput.current!.value);\n      fetch(\n        process.env.REACT_APP_ZOMATO_API_URL + `/search?count=5&q=${e.target.value}&lat=28.6362295&lon=77.3763150`,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"User-Key\": \"28c7fdb103232548b1503df6df9b4520\",\n          },\n        }\n      ).then((resp) => {\n        resp.json().then((data) => {\n          const rests = data.restaurants;\n          // The suggestions List\n          const list = (\n            <div id=\"autocomplete-list\" className=\"autocomplete-items\">\n              {rests.map((rest: any) => {\n                return (\n                  <div id={rest.restaurant.id} key={rest.restaurant.id} onClick={selectRest}>\n                    {\" \"}\n                    {rest.restaurant.name}{\" \"}\n                  </div>\n                );\n              })}\n            </div>\n          );\n          setRestSuggestions(list);\n          setPreferredRestaurants(e.target.value);\n        });\n      });\n    }\n  };\n\n  const signup = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // extract form data\n    const target = e.target as HTMLFormElement;\n    console.log(target);\n    const formdata = new FormData(e.target as HTMLFormElement);\n    formdata.append(\"username\", props.username);\n\n    const json: any = {};\n    formdata.forEach(function (value, prop) {\n      json[prop] = value;\n    });\n\n    const restIds = selectedRests.map((rest) => rest.id);\n    const vendorNames = selectedVendors.map((vendor) => vendor.id);\n    const dob = new Date(props.selectedDate);\n    json[\"preferred_restaurants\"] = restIds.join(\",\");\n    json[\"preferred_vendors\"] = vendorNames.length != 0 ? vendorNames.join(\",\") : \",\";\n    json[\"username\"] = props.username;\n    json[\"password\"] = props.password;\n    json[\"name\"] = props.name;\n    json[\"last_name\"] = props.lname;\n    json[\"address\"] = props.address;\n    json[\"phone\"] = props.phone;\n    json[\"budget_total\"] = props.budget;\n    json[\"PAN_number\"] = props.panNum;\n    json[\"DOB_date\"] = dob.getDate();\n    json[\"DOB_month\"] = dob.getMonth()+2;\n    json[\"DOB_year\"] = dob.getFullYear();\n\n\n    console.log(props);\n    console.log(dob.getMonth());\n    console.log(dob.getFullYear());\n\n    console.log(json);\n    navigator.geolocation.getCurrentPosition((position) => {\n      json[\"latitude\"] = position.coords.latitude;\n      json[\"longitude\"] = position.coords.longitude;\n\n      fetch(process.env.REACT_APP_BACKEND_API_URL + \"/new_signup/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(json),\n      })\n        .then((userResponse) => {\n          if (userResponse.status == 201) {\n            console.log(\"User success\");\n\n            // Upload the menu\n            fetch(process.env.REACT_APP_BACKEND_API_URL + \"/file_upload/\", {\n              method: \"POST\",\n              body: formdata,\n            }).then((fileResponse) => {\n              // If upload is successful, log in\n              if (fileResponse.status == 204) {\n                userResponse.json().then((data) => {\n                  localStorage.setItem(\"token\", data.user.token);\n                  localStorage.setItem(\"vendor\", \"0\");\n                  localStorage.setItem(\"name\", data.student.name);\n                  props.setHomeName(data.student.name);\n                  props.setIsLoggedin(true);\n\t\t  props.setIsVendor(false);\n                  console.log(data);\n                });\n              }\n            });\n          } else {\n            console.log(\"error\");\n            userResponse.json().then((data) => {\n              // TODO: Display the errors on screen\n              console.log(data);\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\");\n          console.log(error);\n        });\n    });\n  };\n\n  const removeRestChip = (restId: number) => {\n    const newSelectedRest: any = selectedRests.filter((rest) => {\n      return rest.id !== restId;\n    });\n    setSelectedRests(newSelectedRest);\n  };\n\n  const removeVendChip = (vendId: number) => {\n    const newSelectedVendors: any = selectedVendors.filter((vend) => {\n      return vend.id !== vendId;\n    });\n    setSelectedRests(newSelectedVendors);\n  };\n  return (\n    <form noValidate onSubmit={signup}>\n      <IonGrid className=\"pref\">\n        <IonRow>\n          <IonCol>\n            <h2 className=\"header pref\">Preferences</h2>\n          </IonCol>\n        </IonRow>\n        <IonRow className=\"cardRow\">\n          <IonCard>\n            <IonItem>\n              <IonIcon icon={fastFoodOutline} color=\"primary\" className=\"ion-padding\"></IonIcon>\n              <IonLabel className=\"labels\">Preferred Restaurants</IonLabel>\n              <IonInput\n                color=\"primary\"\n                name=\"preferred_restaurants\"\n                type=\"text\"\n                value={preferredRestaurants}\n                onKeyDown={onRestInputChange}\n                ref={restInput}\n              ></IonInput>\n              {/* <div>{restSuggestions}</div> */}\n            </IonItem>\n            <div>{restSuggestions}</div>\n\n            {selectedRests.map((rest: any) => (\n              <IonItem lines=\"none\" className=\"chipsDiv\">\n                <div id={rest.id}>\n                  <ChipsComp restName={rest.name} restId={rest.id} removeChip={removeRestChip} />\n                </div>\n              </IonItem>\n            ))}\n          </IonCard>\n        </IonRow>\n        <IonRow className=\"cardRow\">\n          <IonCard>\n            <IonItem>\n              <IonIcon icon={peopleOutline} color=\"primary\" className=\"ion-padding\"></IonIcon>\n              <IonLabel>Preferred Vendors</IonLabel>\n              <IonInput\n                color=\"primary\"\n                name=\"preferred_vendors\"\n                type=\"text\"\n                value={preferredVendors}\n                onKeyDown={onVendorInpChange}\n                // ref={restInput}\n              ></IonInput>\n              {/* <div>{vendorSuggestions}</div> */}\n            </IonItem>\n            <div>{vendorSuggestions}</div>\n            {selectedVendors.map((vend: any) => (\n              <IonItem lines=\"none\" className=\"chipsDiv\">\n                <div id={vend.id}>\n                  <ChipsComp restName={vend.name} restId={vend.id} removeChip={removeVendChip} />\n                </div>\n              </IonItem>\n            ))}\n          </IonCard>\n        </IonRow>\n        <IonRow>\n          <IonCard>\n            <IonItem>\n              <IonIcon icon={checkmarkDoneOutline} className=\"ion-padding\" color=\"primary\"></IonIcon>\n              <IonLabel>Preferred Cuisines</IonLabel>\n              <IonInput\n                color=\"primary\"\n                name=\"preferred_cuisines\"\n                type=\"text\"\n                value={preferredCuisines}\n                onIonChange={(e) => setPreferredCuisines(e.detail.value!)}\n              ></IonInput>\n            </IonItem>\n          </IonCard>\n        </IonRow>\n        <IonRow>\n          <IonCard>\n            <IonItem>\n              <IonIcon icon={closeCircleOutline} className=\"ion-padding\" color=\"primary\"></IonIcon>\n\n              <IonLabel>Disliked Dishes</IonLabel>\n              <IonInput\n                color=\"primary\"\n                name=\"not_preferred\"\n                type=\"text\"\n                value={dislikedDishes}\n                onIonChange={(e) => setDislikedDishes(e.detail.value!)}\n              ></IonInput>\n            </IonItem>\n          </IonCard>\n        </IonRow>\n        <IonRow>\n          <IonCard>\n            <IonItem>\n              <IonIcon icon={clipboardOutline} className=\"ion-padding\" color=\"primary\"></IonIcon>\n              <IonLabel>Mess Menu</IonLabel>\n            </IonItem>\n            <div className=\"ion-padding\">\n              <input type=\"file\" name=\"file\" />\n            </div>\n          </IonCard>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonButton type=\"submit\" color=\"primary\" expand=\"block\" className=\"btn-sub\" onClick={clearInputs}>\n              Submit\n            </IonButton>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n    </form>\n  );\n};\n\nexport default Preferences;\n\n"]},"metadata":{},"sourceType":"module"}