{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FoodFlex/src/pages/Vendor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { IonContent, IonCard, IonPage, IonRow, IonCol, IonButton, IonGrid } from \"@ionic/react\";\nimport \"./Login.css\";\nimport \"./Signup.css\";\nimport { personAddOutline, keyOutline, personOutline, homeOutline, phonePortraitOutline, walletOutline, cardOutline } from \"ionicons/icons\";\nimport SignupRows from \"../components/SignupRows\";\nimport DateTimeExamples from \"../components/DateofBirth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Vendor = ({\n  setIsLoggedin,\n  setHomeName,\n  setIsVendor\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lname, setLName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [panNum, setPan] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"2000-01-01T13:47:20.789\"); // const [formSubmitted, setFormSubmitted] = useState(false);\n  // const [usernameError, setUsernameError] = useState(false);\n  // const [passwordError, setPasswordError] = useState(false);\n\n  const signup = e => {\n    e.preventDefault(); // extract form data\n\n    const formdata = new FormData(e.target);\n    const json = {};\n    formdata.forEach(function (value, prop) {\n      json[prop] = value;\n    });\n    const dob = new Date(selectedDate);\n    json[\"DOB_date\"] = dob.getDate();\n    json[\"DOB_month\"] = dob.getMonth() + 1;\n    json[\"DOB_year\"] = dob.getFullYear();\n    console.log(json);\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      json[\"latitude\"] = position.coords.latitude;\n      json[\"longitude\"] = position.coords.longitude;\n      fetch(process.env.REACT_APP_BACKEND_API_URL + \"/new_vendor_signup/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(json)\n      }).then(response => {\n        if (response.status == 201) {\n          console.log(\"success\");\n          response.json().then(data => {\n            localStorage.setItem(\"token\", data.user.token);\n            localStorage.setItem(\"vendor\", \"1\");\n            localStorage.setItem(\"name\", data.vendor.name);\n            setIsVendor(true);\n            setHomeName(data.vendor.name);\n            setIsLoggedin(true);\n            console.log(data);\n          });\n        } else {\n          console.log(\"error\");\n          response.json().then(data => {\n            // TODO: Display the errors on screen\n            console.log(data);\n          });\n        }\n      }).catch(error => {\n        console.log(\"error\");\n        console.log(error);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    id: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonRow, {\n        children: /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"header \",\n            children: \"Personal Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: signup,\n        children: /*#__PURE__*/_jsxDEV(IonGrid, {\n          children: [/*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"username\",\n            typeIn: \"text\",\n            setter: setUsername,\n            ionIcon: personAddOutline,\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"password\",\n            typeIn: \"password\",\n            setter: setPassword,\n            ionIcon: keyOutline,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"name\",\n            typeIn: \"text\",\n            setter: setName,\n            ionIcon: personOutline,\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"last_name\",\n            typeIn: \"text\",\n            setter: setLName,\n            ionIcon: personOutline,\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"address\",\n            typeIn: \"text\",\n            setter: setAddress,\n            ionIcon: homeOutline,\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"phone\",\n            typeIn: \"tel\",\n            setter: setPhone,\n            ionIcon: phonePortraitOutline,\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"price\",\n            typeIn: \"number\",\n            setter: setPrice,\n            ionIcon: walletOutline,\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignupRows, {\n            nameIn: \"PAN_number\",\n            typeIn: \"text\",\n            setter: setPan,\n            ionIcon: cardOutline,\n            children: \"Pan Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              className: \"cardRow\",\n              children: /*#__PURE__*/_jsxDEV(IonCard, {\n                children: /*#__PURE__*/_jsxDEV(DateTimeExamples, {\n                  selectedDate: selectedDate,\n                  setSelectedDate: setSelectedDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonButton, {\n                type: \"submit\",\n                color: \"primary\",\n                expand: \"block\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Vendor, \"Fv7RWQPgMhnTp74evn+i1INWlOg=\");\n\n_c = Vendor;\nexport default Vendor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vendor\");","map":{"version":3,"sources":["/home/kartik/Desktop/FoodFlex/src/pages/Vendor.tsx"],"names":["React","useState","IonContent","IonCard","IonPage","IonRow","IonCol","IonButton","IonGrid","personAddOutline","keyOutline","personOutline","homeOutline","phonePortraitOutline","walletOutline","cardOutline","SignupRows","DateTimeExamples","Vendor","setIsLoggedin","setHomeName","setIsVendor","username","setUsername","password","setPassword","name","setName","lname","setLName","address","setAddress","phone","setPhone","price","setPrice","panNum","setPan","selectedDate","setSelectedDate","signup","e","preventDefault","formdata","FormData","target","json","forEach","value","prop","dob","Date","getDate","getMonth","getFullYear","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","env","REACT_APP_BACKEND_API_URL","method","headers","body","JSON","stringify","then","response","status","data","localStorage","setItem","user","token","vendor","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Dispatch, ReactElement, useRef } from \"react\";\nimport { IonContent, IonCard, IonPage, IonRow, IonCol, IonButton, IonList, IonItem, IonLabel, IonInput, IonGrid } from \"@ionic/react\";\nimport \"./Login.css\";\nimport \"./Signup.css\";\nimport SignUpInput from \"../components/SignUpInput\";\nimport { personAddOutline, keyOutline, personOutline, homeOutline, phonePortraitOutline, walletOutline, cardOutline } from \"ionicons/icons\";\nimport SignupRows from \"../components/SignupRows\"\nimport DateTimeExamples from \"../components/DateofBirth\"\ntype Props = {\n  setIsLoggedin: Dispatch<React.SetStateAction<boolean>>;\n  setHomeName: Dispatch<React.SetStateAction<string>>;\n  setIsVendor: Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst Vendor: React.FC<Props> = ({ setIsLoggedin, setHomeName, setIsVendor }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lname, setLName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [panNum, setPan] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState<string>(\"2000-01-01T13:47:20.789\");\n\n  // const [formSubmitted, setFormSubmitted] = useState(false);\n  // const [usernameError, setUsernameError] = useState(false);\n  // const [passwordError, setPasswordError] = useState(false);\n\n  const signup = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // extract form data\n    const formdata = new FormData(e.target as HTMLFormElement);\n\n    const json: any = {};\n    formdata.forEach(function (value, prop) {\n      json[prop] = value;\n    });\n    const dob = new Date(selectedDate);\n    json[\"DOB_date\"] = dob.getDate();\n    json[\"DOB_month\"] = dob.getMonth()+1;\n    json[\"DOB_year\"] = dob.getFullYear();\n    console.log(json);\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      json[\"latitude\"] = position.coords.latitude;\n      json[\"longitude\"] = position.coords.longitude;\n\n      fetch(process.env.REACT_APP_BACKEND_API_URL + \"/new_vendor_signup/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(json),\n      })\n        .then((response) => {\n          if (response.status == 201) {\n            console.log(\"success\");\n            response.json().then((data) => {\n              localStorage.setItem(\"token\", data.user.token);\n              localStorage.setItem(\"vendor\", \"1\");\n              localStorage.setItem(\"name\", data.vendor.name);\n              setIsVendor(true);\n              setHomeName(data.vendor.name);\n              setIsLoggedin(true);\n              console.log(data);\n            });\n          } else {\n            console.log(\"error\");\n            response.json().then((data) => {\n              // TODO: Display the errors on screen\n              console.log(data);\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\");\n          console.log(error);\n        });\n    });\n  };\n\n  return (\n    <IonPage id=\"login-page\">\n      <IonContent>\n        <IonRow>\n          <IonCol>\n            <h2 className=\"header \">Personal Details</h2>\n          </IonCol>\n        </IonRow>\n        <form noValidate onSubmit={signup}>\n          <IonGrid>\n            <SignupRows nameIn={\"username\"} typeIn={\"text\"} setter={setUsername} ionIcon={personAddOutline}>Username</SignupRows>\n            <SignupRows nameIn={\"password\"} typeIn={\"password\"} setter={setPassword} ionIcon={keyOutline}>Password</SignupRows>\n            <SignupRows nameIn={\"name\"} typeIn={\"text\"} setter={setName} ionIcon={personOutline}>First Name</SignupRows>\n            <SignupRows nameIn={\"last_name\"} typeIn={\"text\"} setter={setLName} ionIcon={personOutline}>Last Name</SignupRows>\n            <SignupRows nameIn={\"address\"} typeIn={\"text\"} setter={setAddress} ionIcon={homeOutline}>Address</SignupRows>\n            <SignupRows nameIn={\"phone\"} typeIn={\"tel\"} setter={setPhone} ionIcon={phonePortraitOutline}>Phone</SignupRows>\n            <SignupRows nameIn={\"price\"} typeIn={\"number\"} setter={setPrice} ionIcon={walletOutline}>Price</SignupRows>\n            <SignupRows nameIn={\"PAN_number\"} typeIn={\"text\"} setter={setPan} ionIcon={cardOutline}>Pan Card</SignupRows>\n            <IonRow >\n              <IonCol className=\"cardRow\">\n                <IonCard>\n                  <DateTimeExamples selectedDate={selectedDate} setSelectedDate={setSelectedDate}></DateTimeExamples>\n                </IonCard>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonButton type=\"submit\" color=\"primary\" expand=\"block\">\n                  Submit\n                </IonButton>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </form>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Vendor;\n"]},"metadata":{},"sourceType":"module"}