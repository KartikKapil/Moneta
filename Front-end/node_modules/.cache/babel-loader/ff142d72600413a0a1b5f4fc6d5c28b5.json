{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FoodFlex/src/pages/Payment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { IonPage, IonCard, IonCardTitle, IonCardHeader, IonCardSubtitle, IonCardContent, IonButton, IonContent, IonItem, IonLabel, IonInput, useIonPicker, IonIcon, IonItemSliding, IonItemOptions, IonItemOption } from \"@ionic/react\";\nimport \"./Payment.css\";\nimport { restaurantOutline, send } from \"ionicons/icons\";\nimport Toasts from \"../components/Toasts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = props => {\n  _s();\n\n  const [present] = useIonPicker();\n  const inAmount = useRef(null);\n  const [pay, setPay] = useState();\n  const [value, setValue] = useState(\"Select vendor\");\n  const [msg, setmsg] = useState(\"\");\n  const [toastIsShown, setToastIsShown] = useState(false);\n  const [vendors, setVendors] = useState([]);\n  const [balance, setBalance] = useState(0);\n\n  const clearInput = () => {\n    inAmount.current.value = \"\";\n  };\n\n  const showToast = () => {\n    console.log(value);\n    clearInput();\n    fetch(process.env.REACT_APP_BACKEND_API_URL + \"/make_transaction/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        username: value,\n        amount: pay\n      })\n    }).then(userResponse => {\n      if (userResponse.status == 200) {\n        console.log(\"Transfer Success\");\n        setToastIsShown(true);\n        setValue(\"Select vendor\");\n      } else {\n        console.log(\"error\");\n        userResponse.json().then(data => {\n          // TODO: Display the errors on screen\n          console.log(data);\n        });\n      }\n    }).catch(error => {\n      console.log(\"error\");\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    fetch(process.env.REACT_APP_BACKEND_API_URL + \"/get_preferred_vendors/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      }\n    }).then(res => {\n      res.json().then(data => {\n        console.log(\"Vendors: \");\n        console.log(data);\n        setVendors(data[\"vendors\"]);\n      });\n    });\n    fetch(process.env.REACT_APP_BACKEND_API_URL + \"/get_balance/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      }\n    }).then(res => {\n      res.json().then(data => {\n        console.log(\"Balance: \");\n        console.log(data);\n        setBalance(data[\"Balance\"]);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonCard, {\n        color: \"secondary\",\n        className: \"ion-text-center pay-card\",\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          className: \"ion-text-left header\",\n          children: [/*#__PURE__*/_jsxDEV(IonCardSubtitle, {\n            children: \"Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            className: \"user-title\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"head\",\n              children: [\"\\u20B9 \", balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          className: \"cardcon\",\n          children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n            icon: restaurantOutline,\n            className: \"rest\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            className: \"vendorop ion-text-left\",\n            expand: \"block\",\n            fill: \"clear\",\n            color: \"tertiary\",\n            onClick: () => present({\n              buttons: [{\n                text: \"Confirm\",\n                handler: selected => {\n                  setValue(selected.vendors.value);\n                }\n              }, {\n                text: \"Cancel\",\n                role: \"cancel\",\n                cssClass: \"secondary\",\n                handler: () => {\n                  console.log(\"Canceled\");\n                }\n              }],\n              columns: [{\n                name: \"vendors\",\n                options: vendors.map(v => {\n                  return {\n                    text: v.name,\n                    value: v.username\n                  };\n                }) // options: [\n                //     { text: 'Food Express', value: 'Food Express, Noida' },\n                //     { text: 'Agra Retaurant', value: 'Agra Retaurant' },\n                //     { text: 'Vinod Fast Food', value: 'Vinod Fast Food' },\n                //     { text: 'Foodie Range', value: 'Foodie Range' },\n                //     { text: 'Veerji Food Corner', value: 'Veerji Food Corner' },\n                //     { text: 'Kathi Junction', value: 'Kathi Junction' },\n                // ],\n\n              }]\n            }),\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n            color: \"secondary\",\n            className: \"ion-text-center \",\n            children: /*#__PURE__*/_jsxDEV(IonInput, {\n              placeholder: \"Enter Amount\",\n              type: \"number\",\n              ref: inAmount,\n              color: \"primary\",\n              className: \"amt\",\n              onIonChange: e => setPay(parseInt(e.detail.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonItemSliding, {\n            color: \"secondary\",\n            children: [/*#__PURE__*/_jsxDEV(IonItem, {\n              color: \"secondary\",\n              lines: \"none\",\n              className: \"ion-text-center swipe\",\n              children: /*#__PURE__*/_jsxDEV(IonLabel, {\n                children: \"Swipe to Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonItemOptions, {\n              side: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IonItemOption, {\n                color: \"secondary\",\n                onClick: showToast,\n                expandable: true,\n                children: /*#__PURE__*/_jsxDEV(IonIcon, {\n                  icon: send,\n                  size: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toasts, {\n            toastIsShown: toastIsShown,\n            setToastIsShown: setToastIsShown,\n            msg: \"Payment Confirmed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pay-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.postimg.cc/VkZDMvJr/Let-s-Start-2.png\",\n          alt: \"Ionic logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"0kn5Ac6XoPswhZTWNXaoW/e2ER8=\", false, function () {\n  return [useIonPicker];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/kartik/Desktop/FoodFlex/src/pages/Payment.tsx"],"names":["React","useState","useEffect","useRef","IonPage","IonCard","IonCardTitle","IonCardHeader","IonCardSubtitle","IonCardContent","IonButton","IonContent","IonItem","IonLabel","IonInput","useIonPicker","IonIcon","IonItemSliding","IonItemOptions","IonItemOption","restaurantOutline","send","Toasts","Payment","props","present","inAmount","pay","setPay","value","setValue","msg","setmsg","toastIsShown","setToastIsShown","vendors","setVendors","balance","setBalance","clearInput","current","showToast","console","log","fetch","process","env","REACT_APP_BACKEND_API_URL","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","username","amount","then","userResponse","status","json","data","catch","error","res","buttons","text","handler","selected","role","cssClass","columns","name","options","map","v","e","parseInt","detail"],"mappings":"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","sourcesContent":["import React, { Dispatch, useState, useEffect, useRef } from \"react\";\nimport {\n  IonPage,\n  IonCard,\n  IonCardTitle,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardContent,\n  IonButton,\n  IonContent,\n  IonItem,\n  IonLabel,\n  IonInput,\n  useIonPicker,\n  IonIcon,\n  IonItemSliding,\n  IonItemOptions,\n  IonItemOption,\n  IonAlert,\n} from \"@ionic/react\";\nimport \"./Payment.css\";\nimport { restaurantOutline, send } from \"ionicons/icons\";\nimport Toasts from \"../components/Toasts\";\ntype PaymentProps = {\n  setIsLoggedin: Dispatch<React.SetStateAction<boolean>>;\n  setHomeName: Dispatch<React.SetStateAction<string>>;\n  userName: string;\n  phoneNumber: number;\n  amountPaid: number;\n  currBudget: number;\n  setBudget: Dispatch<React.SetStateAction<number>>;\n};\n\nconst Payment: React.FC<PaymentProps> = (props) => {\n  const [present] = useIonPicker();\n  const inAmount = useRef<HTMLIonInputElement>(null);\n  const [pay, setPay] = useState<number>();\n  const [value, setValue] = useState(\"Select vendor\");\n  const [msg, setmsg] = useState<string>(\"\");\n  const [toastIsShown, setToastIsShown] = useState<boolean>(false);\n  const [vendors, setVendors] = useState<any>([]);\n  const [balance, setBalance] = useState(0);\n\n  const clearInput = () => {\n    inAmount.current!.value = \"\";\n  };\n\n  const showToast = () => {\n    console.log(value);\n    clearInput();\n    fetch(process.env.REACT_APP_BACKEND_API_URL + \"/make_transaction/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", Authorization: `JWT ${localStorage.getItem(\"token\")}` },\n      body: JSON.stringify({ username: value, amount: pay }),\n    })\n      .then((userResponse) => {\n        if (userResponse.status == 200) {\n          console.log(\"Transfer Success\");\n          setToastIsShown(true);\n          setValue(\"Select vendor\");\n        } else {\n          console.log(\"error\");\n          userResponse.json().then((data) => {\n            // TODO: Display the errors on screen\n            console.log(data);\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\");\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    fetch(process.env.REACT_APP_BACKEND_API_URL + \"/get_preferred_vendors/\", {\n      method: \"GET\",\n      headers: { Authorization: `JWT ${localStorage.getItem(\"token\")}` },\n    }).then((res) => {\n      res.json().then((data) => {\n        console.log(\"Vendors: \");\n        console.log(data);\n        setVendors(data[\"vendors\"]);\n      });\n    });\n\n    fetch(process.env.REACT_APP_BACKEND_API_URL + \"/get_balance/\", {\n      method: \"GET\",\n      headers: { Authorization: `JWT ${localStorage.getItem(\"token\")}` },\n    }).then((res) => {\n      res.json().then((data) => {\n        console.log(\"Balance: \");\n        console.log(data);\n        setBalance(data[\"Balance\"]);\n      });\n    });\n  }, []);\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonCard color=\"secondary\" className=\"ion-text-center pay-card\">\n          <IonCardHeader className=\"ion-text-left header\">\n            <IonCardSubtitle>Balance</IonCardSubtitle>\n            <IonCardTitle className=\"user-title\">\n              <p className=\"head\">&#8377; {balance}</p>\n            </IonCardTitle>\n          </IonCardHeader>\n\n          <IonCardContent className=\"cardcon\">\n            <IonIcon icon={restaurantOutline} className=\"rest\" size=\"small\"></IonIcon>\n            <IonButton\n              className=\"vendorop ion-text-left\"\n              expand=\"block\"\n              fill=\"clear\"\n              color=\"tertiary\"\n              onClick={() =>\n                present({\n                  buttons: [\n                    {\n                      text: \"Confirm\",\n                      handler: (selected) => {\n                        setValue(selected.vendors.value);\n                      },\n                    },\n                    {\n                      text: \"Cancel\",\n                      role: \"cancel\",\n                      cssClass: \"secondary\",\n                      handler: () => {\n                        console.log(\"Canceled\");\n                      },\n                    },\n                  ],\n                  columns: [\n                    {\n                      name: \"vendors\",\n                      options: vendors.map((v: any) => {\n                        return { text: v.name, value: v.username };\n                      }),\n                      // options: [\n                      //     { text: 'Food Express', value: 'Food Express, Noida' },\n                      //     { text: 'Agra Retaurant', value: 'Agra Retaurant' },\n                      //     { text: 'Vinod Fast Food', value: 'Vinod Fast Food' },\n                      //     { text: 'Foodie Range', value: 'Foodie Range' },\n                      //     { text: 'Veerji Food Corner', value: 'Veerji Food Corner' },\n                      //     { text: 'Kathi Junction', value: 'Kathi Junction' },\n                      // ],\n                    },\n                  ],\n                })\n              }\n            >\n              {value}\n            </IonButton>\n            <IonItem color=\"secondary\" className=\"ion-text-center \">\n              <IonInput\n                placeholder=\"Enter Amount\"\n                type=\"number\"\n                ref={inAmount}\n                color=\"primary\"\n                className=\"amt\"\n                onIonChange={(e) => setPay(parseInt(e.detail.value!))}\n              ></IonInput>\n            </IonItem>\n            <IonItemSliding color=\"secondary\">\n              <IonItem color=\"secondary\" lines=\"none\" className=\"ion-text-center swipe\">\n                <IonLabel>Swipe to Send</IonLabel>\n              </IonItem>\n\n              <IonItemOptions side=\"end\">\n                <IonItemOption color=\"secondary\" onClick={showToast} expandable>\n                  <IonIcon icon={send} size=\"medium\"></IonIcon>\n                </IonItemOption>\n              </IonItemOptions>\n            </IonItemSliding>\n            <Toasts toastIsShown={toastIsShown} setToastIsShown={setToastIsShown} msg=\"Payment Confirmed\"></Toasts>\n          </IonCardContent>\n        </IonCard>\n        <div className=\"pay-logo\">\n          {/* https://i.postimg.cc/YSm0wwDW/pay2.png */}\n          <img src=\"https://i.postimg.cc/VkZDMvJr/Let-s-Start-2.png\" alt=\"Ionic logo\" />\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}