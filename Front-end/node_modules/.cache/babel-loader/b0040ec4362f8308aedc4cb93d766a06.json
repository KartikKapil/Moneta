{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FoodFlex/src/components/AccCards.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IonFab, IonAlert, IonItem, IonLabel, IonIcon, IonFabButton } from '@ionic/react';\nimport { pencilOutline } from \"ionicons/icons\";\nimport \"./AccCards.css\";\nimport Toasts from \"../components/Toasts\"; //Change UserName Card In account section\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccCards = (props, setUsername) => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [toastIsShown, setToastIsShown] = useState(false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IonItem, {\n      lines: \"none\",\n      className: \"acc-item\",\n      children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IonFab, {\n        horizontal: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IonFabButton, {\n          className: \"btn\",\n          size: \"small\",\n          color: \"success\",\n          onClick: () => setShowAlert(true),\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            icon: pencilOutline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n      isOpen: showAlert,\n      onDidDismiss: () => setShowAlert(false),\n      cssClass: \"my-custom-class\",\n      header: 'New Password',\n      inputs: [{\n        name: 'name1',\n        type: 'password',\n        placeholder: 'Enter Password'\n      }],\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: () => {\n          console.log(\"Canceled\");\n        }\n      }, {\n        text: 'Ok',\n        handler: data => {\n          var msg = data.name1;\n          setToastIsShown(true);\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toasts, {\n      toastIsShown: toastIsShown,\n      setToastIsShown: setToastIsShown,\n      msg: \"Password changed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AccCards, \"SW5PtRf9UowXQ8d5RRVX6iU2aMc=\");\n\n_c = AccCards;\nexport default AccCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccCards\");","map":{"version":3,"sources":["/home/kartik/Desktop/FoodFlex/src/components/AccCards.tsx"],"names":["React","useState","IonFab","IonAlert","IonItem","IonLabel","IonIcon","IonFabButton","pencilOutline","Toasts","AccCards","props","setUsername","showAlert","setShowAlert","toastIsShown","setToastIsShown","children","name","type","placeholder","text","role","cssClass","handler","console","log","data","msg","name1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAyBC,QAAzB,EAA4DC,OAA5D,EAA+EC,QAA/E,EAA+HC,OAA/H,EAA+OC,YAA/O,QAAmQ,cAAnQ;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;;;AAIA,MAAMC,QAA6B,GAAG,CAACC,KAAD,EAAOC,WAAP,KAAuB;AAAA;;AACzD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAU,KAAV,CAAhD;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAAA,8BACI,QAAC,QAAD;AAAA,kBAAWU,KAAK,CAACM;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAC,KAAnB;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,KAAxB;AAA8B,UAAA,IAAI,EAAC,OAAnC;AAA2C,UAAA,KAAK,EAAC,SAAjD;AAA2D,UAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD,CAAtF;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEN;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD;AACI,MAAA,MAAM,EAAEK,SADZ;AAEI,MAAA,YAAY,EAAE,MAAMC,YAAY,CAAC,KAAD,CAFpC;AAGI,MAAA,QAAQ,EAAC,iBAHb;AAII,MAAA,MAAM,EAAE,cAJZ;AAKI,MAAA,MAAM,EAAE,CACJ;AACII,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,IAAI,EAAE,UAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OADI,CALZ;AAaI,MAAA,OAAO,EAAE,CACL;AACIC,QAAAA,IAAI,EAAE,QADV;AAEIC,QAAAA,IAAI,EAAE,QAFV;AAGIC,QAAAA,QAAQ,EAAE,WAHd;AAIIC,QAAAA,OAAO,EAAE,MAAM;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AANL,OADK,EASL;AACIL,QAAAA,IAAI,EAAE,IADV;AAEIG,QAAAA,OAAO,EAAGG,IAAD,IAAU;AACf,cAAIC,GAAG,GAAGD,IAAI,CAACE,KAAf;AACAb,UAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AALL,OATK;AAbb;AAAA;AAAA;AAAA;AAAA,YATJ,eAwCI,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAED,YAAtB;AAAoC,MAAA,eAAe,EAAEC,eAArD;AAAsE,MAAA,GAAG,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,YAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CAlDD;;GAAMN,Q;;KAAAA,Q;AAoDM,eAAeA,QAAf","sourcesContent":["import React, { useState ,Dispatch} from 'react';\nimport { IonFab, IonTabs,IonAlert, IonTabBar, IonTabButton, IonItem, IonRange, IonLabel, IonToast, IonGrid, IonButton, IonCol, IonIcon, IonCard, IonCardContent, IonRow, IonInput, IonMenuButton, IonPage, IonTitle, IonToolbar, IonCardTitle, IonFabButton } from '@ionic/react';\nimport { pencilOutline } from \"ionicons/icons\";\nimport \"./AccCards.css\";\nimport Toasts from \"../components/Toasts\";\n//Change UserName Card In account section\ntype UserProps = {\n    setUsername: Dispatch<React.SetStateAction<string>>;\n  };\nconst AccCards: React.FC<UserProps> = (props,setUsername) => {\n    const [showAlert, setShowAlert] = useState(false);\n    const [toastIsShown, setToastIsShown] = useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <IonItem lines=\"none\" className=\"acc-item\">\n                <IonLabel>{props.children}</IonLabel>\n                <IonFab horizontal=\"end\" >\n                    <IonFabButton className=\"btn\" size=\"small\" color=\"success\" onClick={() => setShowAlert(true)}>\n                        <IonIcon icon={pencilOutline} ></IonIcon>\n                    </IonFabButton>\n                </IonFab>\n            </IonItem>\n            <IonAlert\n                isOpen={showAlert}\n                onDidDismiss={() => setShowAlert(false)}\n                cssClass='my-custom-class'\n                header={'New Password'}\n                inputs={[\n                    {\n                        name: 'name1',\n                        type: 'password',\n                        placeholder: 'Enter Password',\n                          \n                    },\n                ]}\n                buttons={[\n                    {\n                        text: 'Cancel',\n                        role: 'cancel',\n                        cssClass: 'secondary',\n                        handler: () => {\n                            console.log(\"Canceled\");\n                        }\n                    },\n                    {\n                        text: 'Ok',\n                        handler: (data) => {\n                            var msg = data.name1;\n                            setToastIsShown(true);\n                        }\n                    }\n                ]}\n            />\n            <Toasts toastIsShown={toastIsShown} setToastIsShown={setToastIsShown} msg=\"Password changed\"></Toasts>\n\n            </React.Fragment>\n\n            )\n}\n\n            export default AccCards;"]},"metadata":{},"sourceType":"module"}